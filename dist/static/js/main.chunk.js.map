{"version":3,"file":"static/js/main.chunk.js","sources":["C:/Users/User/Documents/Script/nodejs/e-clock-in/src/atoms/InputLabel.tsx","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/atoms/MyGrid.tsx","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/atoms/index.ts","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/index.tsx","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/molecules/Copyright.tsx","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/molecules/SimpleSnackbar.tsx","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/molecules/TextDialog.tsx","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/molecules/index.ts","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/organisms/Form.tsx","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/organisms/Options.tsx","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/organisms/index.ts","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/pages/App.tsx","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/pages/index.ts","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/serviceWorker.js","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/theme/index.ts","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/theme/theme.ts","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/utilitys/chromeApi.ts","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/utilitys/index.js","C:/Users/User/Documents/Script/nodejs/e-clock-in/src/utilitys/storageApi.ts"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Typography } from '@material-ui/core'\n\nconst InputLabel:any = ({ children, ...props }:any) => {\n  return (\n    <Typography {...props}>\n      {children}\n    </Typography>\n  )\n}\n\nInputLabel.propTypes = {\n  children: PropTypes.node\n}\n\nexport default InputLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Grid } from '@material-ui/core'\n\nconst MyGrid:any = ({ children, ...props }:any) => {\n  const containerprops = props.container && {\n    justify: 'center',\n    alignItems: 'center',\n    spacing: 2\n  }\n  const itemprops = props.item && {\n    xs: 12\n  }\n  return (\n    <Grid {...containerprops} {...itemprops} {...props}>\n      {children}\n    </Grid>\n  )\n}\n\nMyGrid.propTypes = {\n  children: PropTypes.node,\n  container: PropTypes.bool,\n  item: PropTypes.bool\n}\n\nexport default MyGrid\n","import MyGrid from './MyGrid'\nimport InputLabel from './InputLabel'\n\nexport { MyGrid, InputLabel }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './pages'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Typography, Link } from '@material-ui/core'\n\nconst Copyright = (props:any) => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        {props.children || 'Your website'}\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nCopyright.propTypes = {\n  children: PropTypes.node\n}\n\nexport default Copyright\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Snackbar } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    '& .MuiSnackbarContent-root': {\n      width: '60vw',\n      minWidth: 344,\n      maxWidth: 688,\n      flex: 'none'\n    }\n  }\n}))\n\nconst SimpleSnackbar = (props:any) => {\n  const classes = useStyles()\n  return (\n    <Snackbar\n      autoHideDuration={4000 /* 4 ~ 10 second */}\n      anchorOrigin={props.anchorOrigin}\n      open={props.open}\n      onClose={props.onClose}\n      message={props.message}\n      action={props.action &&\n          <Button color=\"secondary\" size=\"small\" onClick={() => { props.onClose(); props.onAction() }}>\n            {props.action}\n          </Button>\n      }\n      className={classes.root}\n    />\n  )\n}\n\nSimpleSnackbar.propTypes = {\n  anchorOrigin: PropTypes.object,\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  message: PropTypes.string,\n  action: PropTypes.string,\n  onAction: PropTypes.func\n}\n\nexport default SimpleSnackbar\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: theme.palette.warning.main\n  }\n}))\n\nconst TextDialog = (props:any) => {\n  const classes = useStyles()\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n      scroll=\"paper\"\n    >\n      <DialogTitle className={classes.title}>Warning</DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText style={{ whiteSpace: 'pre-line', margin: '1.5em 0' }}>\n          {props.content}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => { props.handleClose(); props.handleCancel(props.name) }} color=\"primary\">\n          CANCEL\n        </Button>\n        <Button onClick={props.handleClose} color=\"primary\" >\n          CONTINUE\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nTextDialog.propTypes = {\n  open: PropTypes.bool,\n  handleClose: PropTypes.func,\n  handleCancel: PropTypes.func,\n  content: PropTypes.node,\n  name: PropTypes.string\n}\n\nexport default TextDialog\n","import TextDialog from './TextDialog'\nimport SimpleSnackbar from './SimpleSnackbar'\nimport Copyright from './Copyright'\n\nexport { TextDialog, SimpleSnackbar, Copyright }\n","import React, { ChangeEvent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Switch, TextField, Divider, Button, Typography, Link } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { MyGrid as Grid, InputLabel } from '../atoms'\nimport { TextDialog, SimpleSnackbar } from '../molecules'\nimport { saveOptions, loadOptions, closeTab } from '../utilitys'\n\ninterface FormData {\n  title: string,\n  elem: {\n    key: {\n      init: string,\n      type: string,\n      label: string,\n      password?: boolean,\n      unsafe?: boolean,\n      warning?: string\n    }\n  }\n}\ninterface strObject {\n  [key: string]: string\n}\ninterface boolObject {\n  [key: string]: boolean\n}\n\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    margin: `${theme.spacing(2)}px 0`\n  },\n  link: {\n    float: 'right'\n  }\n}))\n\nconst Form = (props:any) => {\n  const classes = useStyles()\n\n  const [state, setState] = React.useState(() => {\n    const init = {\n      ...props.data.reduce((obj:strObject, d:FormData) => {\n        const items = Object.entries(d.elem)\n        for (const item of items) {\n          obj[item[0]] = item[1].init\n        }\n        return obj\n      }, {})\n    }\n    return init\n  })\n\n  const [init] = React.useState(() => {\n    const dialogContents = props.data.reduce((obj:Object, group:FormData) => {\n      obj = {\n        ...obj,\n        ...Object.entries(group.elem).reduce((res:strObject, [key, e]) => {\n          if (e.warning) { res[key] = e.warning }\n          return res\n        }, {})\n      }\n      return obj\n    }, {})\n    loadOptions(null, (options:Object) => setState({ ...state, ...options }))\n    return { dialogContents: dialogContents }\n  })\n\n  const [error, setError] = React.useState<boolObject>({})\n\n  const handleChange = (event:ChangeEvent<HTMLInputElement>) => {\n    const name = event.target.getAttribute('name') || ''\n    setState({ ...state, [name]: !state[name] })\n  }\n\n  const handleInput = (event:ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value\n    const name = event.target.getAttribute('name') || ''\n    if (input.match(/^[0-9a-zA-Z]+$/) || !input) {\n      setState({ ...state, [name]: event.target.value })\n      setError({ ...error, [name]: false })\n    } else {\n      setError({ ...error, [name]: true })\n    }\n  }\n\n  const [showBar, setShowBar] = React.useState(false)\n\n  const handleSubmit = () => {\n    saveOptions(state, () => setShowBar(true))\n  }\n\n  const [stateDialog, setStateDialog] = React.useState({\n    show: false,\n    name: ''\n  })\n\n  const handleCloseDialog = () => {\n    setStateDialog({ ...stateDialog, show: false })\n  }\n\n  const handleCancel = (name:string) => {\n    setState({ ...state, [name]: !state[name] })\n  }\n\n  const handleWarning = (event:ChangeEvent<HTMLInputElement>) => {\n    handleChange(event)\n    const name = event.target.getAttribute('name') || ''\n    if (!state[name]) {\n      setStateDialog({\n        ...stateDialog,\n        show: true,\n        name: name\n      })\n    }\n  }\n\n  React.useEffect(() => {\n    const unsafes = document.getElementsByClassName('unsafe') as HTMLCollectionOf<HTMLElement>\n    const showUnsafe = state.fillPassword\n    for (const unsafe of Array.from(unsafes)) {\n      if (showUnsafe) {\n        unsafe.style.display = 'flex'\n      } else {\n        unsafe.style.display = 'none'\n      }\n    }\n  })\n\n  return (\n    <Grid container>\n      {props.data.map((d:FormData, i:number) => {\n        return (\n          <Grid item container key={i} >\n            <Grid item >\n              <Typography variant='overline'>{d.title}</Typography>\n            </Grid>\n            {Object.entries(d.elem).map((items) => {\n              const [name, e] = items\n              if (e.type === 'TextField') {\n                return (\n                  <Grid item className={e.unsafe && 'unsafe'} key={name}>\n                    <TextField\n                      variant=\"outlined\"\n                      fullWidth\n                      onChange={handleInput}\n                      label={e.label}\n                      name={name}\n                      value={state[name]}\n                      type={e.password ? 'password' : 'email'}\n                      title=''\n                      error={error[name]}\n                      helperText={error[name] && 'å¨è§æå­ã¯ä½¿ç¨ã§ãã¾ãã'}\n                    />\n                  </Grid>\n                )\n              } else if (e.type === 'Switch') {\n                const f = !e.warning ? handleChange : handleWarning\n                return (\n                  <Grid item container key={name}>\n                    <Grid item xs={true}>\n                      <InputLabel\n                        variant='subtitle1'\n                        onClick={f}\n                        name={name}\n                      >\n                        {e.label}\n                      </InputLabel>\n                    </Grid>\n                    <Grid item xs={false}>\n                      <Switch\n                        checked={state[name]}\n                        onChange={f}\n                        name={name}\n                        color=\"primary\"\n                      />\n                    </Grid>\n                  </Grid>\n                )\n              } else {\n                return null\n              }\n            })}\n            <Grid item >\n              <Divider className={classes.divider} />\n            </Grid>\n          </Grid>\n        )\n      })}\n      <Grid item container>\n        <Grid item >\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSubmit}\n          >\n            SAVE\n          </Button>\n        </Grid>\n        <Grid item>\n          <Link href={props.link.target} variant=\"body2\" color='textSecondary' className={classes.link}>\n            {props.link.text || <></>}\n          </Link>\n        </Grid>\n      </Grid>\n      <TextDialog\n        open={stateDialog.show}\n        handleClose={handleCloseDialog}\n        handleCancel={handleCancel}\n        content={stateDialog.name ? init.dialogContents[stateDialog.name] : <></>}\n        name={stateDialog.name}\n      ></TextDialog>\n      <SimpleSnackbar\n        open={showBar}\n        onClose={() => setShowBar(false)}\n        message='ä¿å­ãã¾ãã'\n        action='CLOSE'\n        onAction={() => closeTab()}\n      />\n    </Grid>\n  )\n}\n\nForm.propTypes = {\n  data: PropTypes.array,\n  link: PropTypes.object\n}\n\nexport default Form\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport clsx from 'clsx'\nimport { Typography, Avatar, Container, Box, Link, Divider } from '@material-ui/core'\nimport SettingsIcon from '@material-ui/icons/Settings'\n// import OpenInNewIcon from '@material-ui/icons/OpenInNew'\nimport GitHubIcon from '@material-ui/icons/GitHub'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { Form } from '../organisms'\n\nconst asyncSetTimeout = (msec:number, func = () => {}) => {\n  let timeoutId:number\n  const exec = () => new Promise((resolve) => {\n    timeoutId = window.setTimeout(() => {\n      resolve(func())\n    }, msec)\n  })\n  return {\n    exec,\n    cancel: () => {\n      timeoutId && window.clearTimeout(timeoutId)\n    }\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh'\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px`,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    padding: theme.spacing(6),\n    lineHeight: `${theme.spacing(6)}px`\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    position: 'absolute',\n    top: 'calc(144px - 28px)',\n    left: 'calc(50% - 28px)',\n    '& .MuiSvgIcon-root': {\n      fontSize: 28,\n      animation: '$r 12s linear infinite',\n      transformOrigin: 'center'\n    }\n  },\n  action: {\n    '& .MuiSvgIcon-root': {\n      animation: '$rFast 4200ms cubic-bezier(0, 0, 0, 1)'\n    }\n  },\n  '@keyframes r': {\n    from: { transform: 'rotate(0deg)' },\n    to: { transform: 'rotate(360deg)' }\n  },\n  '@keyframes rFast': {\n    from: { transform: 'rotate(360deg)' },\n    to: { transform: 'rotate(3600deg)' }\n  },\n  divider: {\n    backgroundColor: theme.palette.secondary.main,\n    margin: '0 5%'\n  },\n  linkicon: {\n    fontSize: 16,\n    verticalAlign: 'middle',\n    marginRight: 8,\n    marginBottom: 3\n  }\n}))\n\nconst Options = (props:any) => {\n  const classes = useStyles()\n\n  const [action, setAction] = React.useState(false)\n  const [timer, setTimer] = React.useState(asyncSetTimeout(0))\n\n  const handleClick = async () => {\n    const prevTimer = timer\n    if (action && prevTimer) {\n      prevTimer.cancel()\n      setAction(false)\n    }\n    const start = asyncSetTimeout(0, () => { setAction(true) })\n    await start.exec()\n    const newTimer = asyncSetTimeout(4000, () => { setAction(false) })\n    setTimer(newTimer)\n    await newTimer.exec()\n  }\n\n  return (\n    <Container maxWidth={false} disableGutters className={classes.root}>\n      <Box textAlign='center'>\n        <Typography component=\"h1\" variant=\"h4\" className={classes.title}>\n                    Options\n        </Typography>\n        <Avatar className={clsx(classes.avatar, action && classes.action)} onClick={handleClick}>\n          <SettingsIcon />\n        </Avatar>\n        <Divider className={classes.divider} />\n      </Box>\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\n        <Form data={props.form.data} link={props.form.link} />\n      </Container>\n      <Box flex={1} display='flex' justifyContent='center' alignItems='flex-end' p={2}>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          <Link color=\"inherit\" href=\"https://github.com/olture/easyLazy\">\n            <GitHubIcon className={classes.linkicon}/>GitHub\n          </Link>\n        </Typography>\n      </Box>\n    </Container>\n  )\n}\n\nOptions.propTypes = {\n  form: PropTypes.object\n}\n\nexport default Options\n","import Options from './Options'\nimport Form from './Form'\n\nexport { Options, Form }\n","import React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport { ThemeProvider, StylesProvider } from '@material-ui/core/styles'\n\nimport { Options } from '../organisms'\nimport theme from '../theme'\n\nconst App = () => {\n  return (\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Options\n          form={{\n            data: [\n              {\n                title: 'å¥åãã©ã¼ã ',\n                elem: {\n                  customerID: {\n                    init: '',\n                    type: 'TextField',\n                    label: 'ä¼æ¥­ã³ã¼ã (ä»»æ)'\n                  },\n                  userID: {\n                    init: '',\n                    type: 'TextField',\n                    label: 'ã¦ã¼ã¶ã¼ID (ä»»æ)'\n                  },\n                  password: {\n                    init: '',\n                    type: 'TextField',\n                    label: 'Password',\n                    password: true,\n                    unsafe: true\n                  }\n                }\n              },\n              {\n                title: 'è¿½å ã®ãªãã·ã§ã³',\n                elem: {\n                  focusPassword: {\n                    init: true,\n                    type: 'Switch',\n                    label: 'ãã¹ã¯ã¼ãã«ãã©ã¼ã«ã¹ãã'\n                  },\n                  autoLogin: {\n                    init: false,\n                    type: 'Switch',\n                    label: 'èªåã§ã­ã°ã¤ã³ãã',\n                    warning: `\\\n                    ãã¹ã¯ã¼ãããã¼ã¸ã£ã¼ãªã©ã§èªåå¥åããã¨ãã®ã¿æå¹ã«ãã¦ãã ããã\n                    ãå©ç¨ã®ç°å¢ã«ãã£ã¦ã¯ã­ã°ã¤ã³ã«å¤±æãã¾ãã\n                    èªåã­ã°ã¤ã³ãããªãå ´åã¯ãæåã§ã­ã°ã¤ã³ãã¦ãã ããã\n                    `\n                  },\n                  fillPassword: {\n                    init: false,\n                    type: 'Switch',\n                    label: 'ãã¹ã¯ã¼ããå¥åãã',\n                    warning: `\\\n                    ãã¹ã¯ã¼ãã¯æå·åããã¾ããã\n                    æ©å¯æå ±ã¯å¥åããªãã§ãã ããã\n                    `\n                  }\n                }\n              }\n            ],\n            link: {\n              target: null,\n              text: null\n            }\n          }}\n        />\n      </ThemeProvider>\n    </StylesProvider>\n  )\n}\n\nexport default App\n","import App from './App'\n\nexport { App }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import theme from './theme'\n\nexport default theme\n","import { teal, orange, red, blue, green, grey } from '@material-ui/core/colors'\nimport { createMuiTheme, ThemeOptions } from '@material-ui/core'\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface ThemeOptions {\n    layout?: {\n      drawerWidth?: React.CSSProperties['width']\n    }\n  }\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: teal[500]\n    },\n    secondary: {\n      main: orange.A400\n    },\n    error: {\n      main: red[500]\n    },\n    warning: {\n      main: orange[500]\n    },\n    info: {\n      main: blue[500]\n    },\n    success: {\n      main: green[500]\n    },\n    background: {\n      default: grey[50]\n    }\n  },\n  typography: {\n    button: {\n      textTransform: 'none'\n    },\n    fontFamily: '\"Roboto\",\"Noto Sans JP\",\"Helvetica\",\"Arial\",YuGothic,\"Yu Gothic\",sans-serif',\n    fontWeightLight: 400,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n    fontWeightBold: 500\n  },\n  layout: {\n    drawerWidth: 240\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '*': {\n          '&::-webkit-scrollbar': {\n            width: 6\n          },\n          '&::-webkit-scrollbar-track': {\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: '#ccc',\n            borderRadius: 3\n          }\n        },\n        body: {\n          textRendering: 'optimizeLegibility'\n        }\n      }\n    }\n  }\n})\n\nexport default theme\n","/* global chrome */\n\nexport const isChrome = () => {\n  return Boolean(chrome.storage)\n}\n\nexport const setChromeStorageLocal = (obj:Object, callback:(...args:any) => void) => {\n  chrome.storage.local.set(obj, callback)\n}\n\nexport const setChromeStorageSync = (obj:Object, callback:(...args:any) => void) => {\n  chrome.storage.sync.set(obj, callback)\n}\n\nexport const getChromeStorageLocal = (key:string | null, callback:(...args:any) => void) => {\n  chrome.storage.local.get(key, (res) => {\n    callback(res)\n  })\n}\n\nexport const getChromeStorageSync = (key:string | null, callback:(...args:any) => void) => {\n  chrome.storage.sync.get(key, (res) => {\n    callback(res)\n  })\n}\n\nexport const closeChromeTab = () => chrome.tabs.getCurrent((tab) => {\n  if (tab && tab.id) chrome.tabs.remove(tab.id, () => {})\n})\n","import { isChrome, setChromeStorageLocal, getChromeStorageLocal, closeChromeTab } from './chromeApi'\nimport { setLocalStorage, getLocalStorage } from './storageApi'\n\nconst saveOptions = isChrome() ? setChromeStorageLocal : setLocalStorage\nconst loadOptions = isChrome() ? getChromeStorageLocal : getLocalStorage\nconst closeTab = isChrome() ? closeChromeTab : () => { alert('close') }\n\nexport { saveOptions, loadOptions, closeTab }\n","interface strObject {\n  [key: string]: string\n}\n\nexport const setLocalStorage = (obj:Object, callback:(...args:any) => void) => {\n  for (const data of Object.entries(obj)) {\n    try {\n      localStorage.setItem(data[0], data[1])\n    } catch (e) {\n      alert(e)\n    } finally {\n      callback()\n    }\n  }\n}\n\nconst isBoolean = (arg:any) => {\n  return (typeof arg) === 'boolean' || arg === 'true' || arg === 'false'\n}\n\nconst strToBoolean = (arg:any) => {\n  return arg === 'true' ? true : arg === 'false' ? false : arg\n}\n\nexport const getLocalStorage = (dummy:any, callback:(...args:any) => void) => {\n  const tmp = ['customerID', 'userID', 'focusPassword']\n  const obj:strObject = {}\n  for (const key of tmp) {\n    const res = localStorage.getItem(key)\n    obj[key] = isBoolean(res) ? strToBoolean(res) : res\n  }\n  callback(obj)\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AAKA;;;;;;;;;;;;;;;;;;ACjBA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AAKA;AACA;AAOA;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AAAA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAOA;AACA;AAKA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AADA;AAAA;AACA;AAUA;AACA;AACA;AAEA;AAAA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAXA;AAcA;AACA;AAUA;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AACA;AACA;AADA;AADA;AAAA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAMA;AACA;AASA;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAGA;AAEA;AAEA;AACA;AACA;AAsBA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAAA;AACA;AAQA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAdA;AAAA;AAAA;AACA;AADA;AAiBA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AA7BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA;AAAA;AAAA;AAAA;AACA;AAkDA;AACA;AAAA;AAAA;AACA;AACA;AAtDA;AAwDA;AACA;AAFA;AAvDA;AAAA;AAAA;AACA;AA2DA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAcA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AALA;AASA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzOA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AADA;AADA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AA/CA;AAAA;AACA;AAsDA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AANA;AAAA;AACA;AADA;AAQA;AAAA;AAAA;AACA;AATA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AAKA;;;;;;;;;;;;ACnIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAXA;AAFA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAhBA;AAFA;AA8BA;AACA;AACA;AAFA;AAtDA;AADA;AAgEA;AACA;AACA;;;;;;;;;;;;AChFA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC5IA;AAAA;AAAA;AAEA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAnBA;AAuBA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAFA;AANA;AAWA;AACA;AADA;AAZA;AADA;AADA;AArCA;AA2DA;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAFA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;A","sourceRoot":""}